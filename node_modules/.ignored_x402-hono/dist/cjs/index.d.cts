import { Context } from 'hono';
import { Address } from 'viem';
import { RoutesConfig, FacilitatorConfig } from 'x402/types';
export { Money, Network, PaymentMiddlewareConfig, Resource, RouteConfig, RoutesConfig } from 'x402/types';

/**
 * Enables APIs to be paid for using the x402 payment protocol.
 *
 * This middleware:
 * 1. Validates payment headers and requirements
 * 2. Serves a paywall page for browser requests
 * 3. Returns JSON payment requirements for API requests
 * 4. Verifies and settles payments
 * 5. Sets appropriate response headers
 *
 * @param payToAddress - Address to receive payments
 * @param routes - Route configuration for payment amounts
 * @param facilitator - Configuration for the payment facilitator service
 *
 * @returns A function that creates a Hono middleware handler for a specific payment amount
 *
 * @example
 * ```typescript
 * const middleware = paymentMiddleware(
 *   '0x123...',
 *   {
 *     '/premium/*': {
 *       price: '$0.01',
 *       network: 'base'
 *     }
 *   },
 *   {
 *     url: 'https://facilitator.example.com',
 *     createAuthHeaders: async () => ({
 *       verify: { "Authorization": "Bearer token" },
 *       settle: { "Authorization": "Bearer token" }
 *     })
 *   }
 * );
 *
 * app.use('/premium', middleware);
 * ```
 */
declare function paymentMiddleware(payToAddress: Address, routes: RoutesConfig, facilitator?: FacilitatorConfig): (c: Context, next: () => Promise<void>) => Promise<void | Response>;

export { paymentMiddleware };
